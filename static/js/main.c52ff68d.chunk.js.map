{"version":3,"sources":["components/Form/styles.module.css","components/Suggestions/styles.module.css","components/RecordResult/styles.module.css","components/Header/styles.module.css","components/Footer/styles.module.css","components/Main/styles.module.css","components/App/styles.module.css","components/Footer/Footer.js","images/logo.svg","components/Header/Header.js","utils/constants.js","components/Suggestions/Suggestions.js","utils/addressValidation.js","utils/api.js","utils/dates.js","utils/translite.js","components/Form/Form.js","components/hooks/useOutSideComponentClick.js","utils/nameValidation.js","utils/dateValidation.js","components/RecordResult/RecordResult.js","components/Main/Main.js","components/App/App.js","index.js"],"names":["module","exports","Footer","className","styles","footer","Date","getFullYear","Header","header","src","Logo","alt","logo","BASE_URL","SELECT_ADDRESS_FROM_LIST_MESSAGE","TRANSLITE_ALPHABET","а","б","в","г","д","е","ё","ж","з","и","й","к","л","м","н","о","п","р","с","т","у","ф","х","ц","ч","ш","щ","ъ","ы","ь","э","ю","я","Suggestions","suggestions","onSuggestionClick","list","length","text","map","item","idx","listItem","onClick","onKeyPress","event","key","handleKeyPress","tabIndex","value","data","fias_id","addressValidation","address","setErrors","error","isValid","country","region_iso_code","geo_lat","geo_lon","street","house","options","Accept","Authorization","getAddressSuggestion","input","a","fetch","method","mode","headers","body","JSON","stringify","query","response","checkResponse","addressSuggestionData","console","log","ok","json","Promise","reject","status","today","minDate","toLocaleDateString","year","month","day","setDate","getDate","maxDate","dates","getNameAcronym","str","toLowerCase","split","ruLetter","join","translite","el","slice","Form","record","useState","addressInput","setAddressInput","setAddress","setSuggestions","addressErrors","setAddressErorrs","name","setName","nameErrors","setNameErrors","acronym","setAcronym","date","dateErrors","setDateErrors","setIsValid","isComponentVisible","setIsComponentVisible","ref","useRef","handleClickOutSide","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","useOutSideComponentClick","inputValue","preventDefault","resetForm","formWrapper","form","onSubmit","noValidate","inputLabel","placeholder","type","onChange","handleAcronym","nameArr","filter","every","test","nameValidation","autoComplete","required","onBlur","suggestion","min","max","inputDate","selectedDate","parse","minAllowedDate","maxAllowedDate","dateValidation","button","buttonDisabled","disabled","RecordResult","wrapper","title","Main","recordData","setRecordData","main","App","page","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c52ff68d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"styles_formWrapper__2JYE8\",\"form\":\"styles_form__GNcYE\",\"input\":\"styles_input__1FSSB\",\"inputLabel\":\"styles_inputLabel__2ry-_\",\"error\":\"styles_error__2W9th\",\"button\":\"styles_button__oSFt0\",\"buttonDisabled\":\"styles_buttonDisabled__3SS36\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__1U90Z\",\"listItem\":\"styles_listItem__XCpYZ\",\"text\":\"styles_text__kCHrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__3L8YN\",\"title\":\"styles_title__2L0ah\",\"text\":\"styles_text__3VDuV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__20IhK\",\"logo\":\"styles_logo__25Yz6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"styles_footer__19IHF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__3vozm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"styles_page__3oSrM\"};","import styles from './styles.module.css';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className={styles.footer}>\r\n      <span>{new Date().getFullYear()}</span>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/logo.ed8f9d19.svg\";","import styles from './styles.module.css';\r\nimport Logo from '../../images/logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className={styles.header}>\r\n      <img src={Logo} alt='Логотип' className={styles.logo} />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export const BASE_URL = 'https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address';\r\nexport const API_KEY = '7389611f28c152b5035d5a3ba8a6f5c4f48444ad';\r\nexport const MAX_DATE = 14;\r\nexport const NAME_LENGTH_LIMIT = 3;\r\nexport const MIN_NAME_LENGTH = 1;\r\n\r\n// Сообщения для валидации имени\r\nexport const CYRILLIC_LETTERS_ONLY_MESSAGE = 'Пишите кириллицей';\r\nexport const EXTRA_WORD_OR_SPACE_MESSAGE = 'Добавили лишнее слово или пробел?';\r\nexport const NOT_FULL_NAME_MESSAGE = 'Чего-то нехватает. Фамилия, имя, отчество — полностью';\r\nexport const MIN_WORD_COUNT_MESSAGE = 'Имя, фамилия или отчество не могут быть менее 2 символов';\r\n\r\n// Сообщения для валидации даты\r\nexport const SELECT_CORRECT_DATE_MESSAGE = 'Выберите корректную дату';\r\nexport const SELECTED_DATE_IS_PAST_MESSAGE = 'Этот день уже прошел, к сожалению';\r\nexport const SELECTED_DATE_IS_FUTURE_MESSAGE = 'Нельзя вызвать врача более чем за 14 дней';\r\n\r\n// Сообщения для валидации адреса\r\nexport const SELECT_ADDRESS_FROM_LIST_MESSAGE = 'Выберите адрес из списка';\r\nexport const NO_COUNTRY_MESSAGE = 'Отсутствует поле страна';\r\nexport const NO_COUNTRY_CODE_MESSAGE = 'Отсутствует код страны';\r\nexport const NO_LONGITUDE_MESSAGE = 'Не передана долгота';\r\nexport const NO_LATITUDE_MESSAGE = 'Не передана широта';\r\nexport const NO_STREET_MESSAGE = 'Не указана улица';\r\nexport const NO_HOUSE_MESSAGE = 'Не указан дом';\r\nexport const NO_ADDRESS_FOUND_MESSAGE = 'Ничего не найдено. Проверьте адрес на ошибки';\r\n\r\nexport const TRANSLITE_ALPHABET = {\r\n  а: 'A',\r\n  б: 'B',\r\n  в: 'V',\r\n  г: 'G',\r\n  д: 'D',\r\n  е: 'E',\r\n  ё: 'E',\r\n  ж: 'ZH',\r\n  з: 'Z',\r\n  и: 'I',\r\n  й: 'Y',\r\n  к: 'K',\r\n  л: 'L',\r\n  м: 'M',\r\n  н: 'N',\r\n  о: 'O',\r\n  п: 'P',\r\n  р: 'R',\r\n  с: 'S',\r\n  т: 'T',\r\n  у: 'U',\r\n  ф: 'F',\r\n  х: 'KH',\r\n  ц: 'TS',\r\n  ч: 'CH',\r\n  ш: 'SH',\r\n  щ: 'SCH',\r\n  ъ: '`',\r\n  ы: 'I',\r\n  ь: '`',\r\n  э: 'E',\r\n  ю: 'YU',\r\n  я: 'YA',\r\n  '-': '-',\r\n};\r\n","import { NO_ADDRESS_FOUND_MESSAGE, SELECT_ADDRESS_FROM_LIST_MESSAGE } from '../../utils/constants';\r\nimport styles from './styles.module.css';\r\n\r\nfunction Suggestions({ suggestions, onSuggestionClick }) {\r\n  \r\n  function handleKeyPress(event, item) {\r\n    if (event.key === 'Enter') {\r\n      onSuggestionClick(item);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul className={styles.list}>\r\n        {suggestions.length === 0 ? (\r\n          <p className={styles.text}>{NO_ADDRESS_FOUND_MESSAGE}</p>\r\n        ) : (\r\n          <p className={styles.text}>{SELECT_ADDRESS_FROM_LIST_MESSAGE}:</p>\r\n        )}\r\n        {suggestions.map((item, idx) => (\r\n          <li\r\n            key={item.data.fias_id + idx}\r\n            className={styles.listItem}\r\n            onClick={() => onSuggestionClick(item)}\r\n            onKeyPress={(event) => handleKeyPress(event, item)}\r\n            tabIndex='0'\r\n          >\r\n            {item.value}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Suggestions;\r\n","import {\r\n  NO_COUNTRY_CODE_MESSAGE,\r\n  NO_COUNTRY_MESSAGE,\r\n  NO_HOUSE_MESSAGE,\r\n  NO_LATITUDE_MESSAGE,\r\n  NO_LONGITUDE_MESSAGE,\r\n  NO_STREET_MESSAGE,\r\n  SELECT_ADDRESS_FROM_LIST_MESSAGE,\r\n} from './constants';\r\n\r\nexport default function addressValidation(address, setErrors) {\r\n  if (address.data === null) {\r\n    setErrors({ error: SELECT_ADDRESS_FROM_LIST_MESSAGE, isValid: false });\r\n  } else {\r\n    const { country, region_iso_code, geo_lat, geo_lon, street, house } = address.data;\r\n    if (country === null) {\r\n      setErrors({ error: NO_COUNTRY_MESSAGE, isValid: false });\r\n    } else if (region_iso_code === null) {\r\n      setErrors({ error: NO_COUNTRY_CODE_MESSAGE, isValid: false });\r\n    } else if (geo_lat === null) {\r\n      setErrors({ error: NO_LATITUDE_MESSAGE, isValid: false });\r\n    } else if (street === null) {\r\n      setErrors({ error: NO_STREET_MESSAGE, isValid: false });\r\n    } else if (geo_lon === null) {\r\n      setErrors({ error: NO_LONGITUDE_MESSAGE, isValid: false });\r\n    } else if (house === null) {\r\n      setErrors({ error: NO_HOUSE_MESSAGE, isValid: false });\r\n    } else {\r\n      setErrors({ error: '', isValid: true });\r\n    }\r\n  }\r\n}\r\n","import { API_KEY, BASE_URL } from './constants';\r\nconst options = {\r\n  'Content-Type': 'application/json',\r\n  Accept: 'application/json',\r\n  Authorization: 'Token ' + API_KEY,\r\n};\r\n\r\n// Отправляем запрос за подсказками\r\nasync function getAddressSuggestion(input) {\r\n  try {\r\n    const response = await fetch(BASE_URL, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: options,\r\n      body: JSON.stringify({ query: input }),\r\n    });\r\n    const addressSuggestionData = await checkResponse(response);\r\n    return addressSuggestionData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n// Проверям ответ сервера. Возвращаем JSON если response.ok\r\nfunction checkResponse(response) {\r\n  return response.ok ? response.json() : Promise.reject(`Ошибка ${response.status}`);\r\n}\r\n\r\nexport { getAddressSuggestion };\r\n","import { MAX_DATE } from './constants';\r\n\r\n// Определеяем минимальный и максимальный диапозон дат для вызова врача\r\nfunction dates() {\r\n  const today = new Date();\r\n\r\n  const minDate = today.toLocaleDateString('en-CA', {\r\n    year: 'numeric',\r\n    month: '2-digit',\r\n    day: '2-digit',\r\n  });\r\n\r\n  today.setDate(today.getDate() + MAX_DATE);\r\n  const maxDate = today.toLocaleDateString('en-CA', {\r\n    year: 'numeric',\r\n    month: '2-digit',\r\n    day: '2-digit',\r\n  });\r\n  return { minDate, maxDate };\r\n}\r\n\r\nexport const { minDate, maxDate } = dates();\r\n","import { TRANSLITE_ALPHABET } from './constants';\r\n\r\n// Переводим кириллицу в транслит\r\nfunction translite(str) {\r\n  return str\r\n    .toLowerCase()\r\n    .split('')\r\n    .map((ruLetter) => TRANSLITE_ALPHABET[ruLetter] || '-')\r\n    .join('');\r\n}\r\n\r\n// Вырезаем первые буквы из слов и склеиваем их. Возвращаем аббревиатуру на латинице\r\nfunction getNameAcronym(str) {\r\n  const transliteName = translite(str);\r\n  const acronym = transliteName\r\n    .split('-')\r\n    .map((el) => el.slice(0, 1))\r\n    .join('');\r\n  return acronym;\r\n}\r\n\r\nexport { translite, getNameAcronym };\r\n","import { useEffect, useState } from 'react';\r\nimport useOutSideComponentClick from '../hooks/useOutSideComponentClick';\r\nimport Suggestions from '../Suggestions/Suggestions';\r\nimport addressValidation from '../../utils/addressValidation';\r\nimport { getAddressSuggestion } from '../../utils/api';\r\nimport { maxDate, minDate } from '../../utils/dates';\r\nimport { dateValidation } from '../../utils/dateValidation';\r\nimport nameValidation from '../../utils/nameValidation';\r\nimport { getNameAcronym } from '../../utils/translite';\r\nimport styles from './styles.module.css';\r\n\r\nfunction Form({ record }) {\r\n  // Стейты связанные с инпутом адреса\r\n  const [addressInput, setAddressInput] = useState('');\r\n  const [address, setAddress] = useState({ data: null });\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [addressErrors, setAddressErorrs] = useState({ error: '', isValid: false });\r\n\r\n  // Стейты связанные с инпутом ФИО\r\n  const [name, setName] = useState('');\r\n  const [nameErrors, setNameErrors] = useState({ error: '', isValid: false });\r\n  const [acronym, setAcronym] = useState('');\r\n\r\n  // Стейты связанные с инпутом даты\r\n  const [date, setDate] = useState('');\r\n  const [dateErrors, setDateErrors] = useState({ error: '', isValid: false });\r\n\r\n  // Стейт валидности всей формы\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  // Хук который скрывает блок с подсказками при клике в любой другой области\r\n  const { ref, isComponentVisible, setIsComponentVisible } = useOutSideComponentClick();\r\n\r\n  useEffect(() => {\r\n    // Проверяем на валидность три инпута. Если валидны, то вся форма валидна\r\n    if (nameErrors.isValid && addressErrors.isValid && dateErrors.isValid) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n\r\n    // Скрываем ошибку валидации если инпут адреса не в фокусе и инпут пустой\r\n    if (!isComponentVisible && suggestions.length === 0) {\r\n      setAddressErorrs({ error: '' });\r\n    }\r\n  }, [\r\n    nameErrors.isValid,\r\n    addressErrors.isValid,\r\n    dateErrors.isValid,\r\n    address,\r\n    isComponentVisible,\r\n    suggestions,\r\n  ]);\r\n\r\n  function handleAcronym() {\r\n    const acronym = getNameAcronym(name);\r\n    setAcronym(acronym);\r\n  }\r\n\r\n  function handleNameChange(e) {\r\n    const inputValue = e.target.value;\r\n    setName(inputValue);\r\n    handleAcronym(); // Получаем аббревиатуру на латинице при вводе текста\r\n    nameValidation(inputValue, setNameErrors); // Валидируем инпут на вводе текста\r\n  }\r\n\r\n  async function handleAdressChange(e) {\r\n    const inputValue = e.target.value;\r\n    setAddressInput(inputValue);\r\n\r\n    if (inputValue.length >= 3) {\r\n      const { suggestions } = await getAddressSuggestion(inputValue);\r\n      setIsComponentVisible(true);\r\n      setSuggestions(suggestions);\r\n    } else {\r\n      setIsComponentVisible(false);\r\n      setSuggestions([]);\r\n    }\r\n  }\r\n\r\n  function handleDateChange(e) {\r\n    const inputDate = e.target.value;\r\n    setDate(inputDate);\r\n    dateValidation(inputDate, setDateErrors); // Валидируем дату\r\n  }\r\n\r\n  function onSuggestionClick(suggestion) {\r\n    setAddressInput(suggestion.value);\r\n    setAddress(suggestion);\r\n    addressValidation(suggestion, setAddressErorrs); // Валидируем адрес по клику на подсказке\r\n    setIsComponentVisible(false);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    record({ address, acronym, date }); // По клику на submit возвращаем объект с данными для рендинга на странице\r\n    resetForm();\r\n  }\r\n\r\n  function resetForm() {\r\n    setAddress({ data: null });\r\n    setSuggestions([]);\r\n    setAddressInput('');\r\n    setName('');\r\n    setAcronym('');\r\n    setDate('');\r\n    setIsValid(false);\r\n    setNameErrors({ error: '', isValid: false });\r\n    setAddressErorrs({ error: '', isValid: false });\r\n    setDateErrors({ error: '', isValid: false });\r\n  }\r\n\r\n  return (\r\n    <div className={styles.formWrapper}>\r\n      <form className={styles.form} onSubmit={handleSubmit} noValidate>\r\n        <label className={styles.inputLabel}>\r\n          <input\r\n            className={styles.input}\r\n            placeholder='ФИО полностью'\r\n            type='text'\r\n            onChange={handleNameChange}\r\n            value={name}\r\n            name='name'\r\n            autoComplete='off'\r\n            required\r\n          />\r\n          {nameErrors.error && <span className={styles.error}>{nameErrors.error || ''}</span>}\r\n        </label>\r\n        <label className={styles.inputLabel} ref={ref}>\r\n          <input\r\n            className={`${styles.input}`}\r\n            placeholder='Адрес'\r\n            onChange={handleAdressChange}\r\n            value={addressInput}\r\n            required\r\n            type='text'\r\n            autoComplete='off'\r\n            onBlur={() => addressValidation(address, setAddressErorrs)} // Валидируем адрес при событии onBlur\r\n          />\r\n          {isComponentVisible && (\r\n            <Suggestions suggestions={suggestions} onSuggestionClick={onSuggestionClick} />\r\n          )}\r\n          {addressErrors.error && <span className={styles.error}>{addressErrors.error}</span>}\r\n        </label>\r\n\r\n        <label className={styles.inputLabel}>\r\n          <input\r\n            type='date'\r\n            className={styles.input}\r\n            min={minDate}\r\n            max={maxDate}\r\n            onChange={handleDateChange}\r\n            value={date}\r\n            required\r\n          />\r\n          {dateErrors.error && <span className={styles.error}>{dateErrors.error}</span>}\r\n        </label>\r\n\r\n        <button\r\n          type='submit'\r\n          className={`${styles.button} ${!isValid && styles.buttonDisabled}`}\r\n          disabled={!isValid}\r\n        >\r\n          Вызвать врача\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nexport default function useOutSideComponentClick() {\r\n  const [isComponentVisible, setIsComponentVisible] = useState(false);\r\n  const ref = useRef(null);\r\n\r\n  // Если клик вне блока с подсказками, то скрываем их\r\n  function handleClickOutSide(e) {\r\n    if (ref.current && !ref.current.contains(e.target)) {\r\n      setIsComponentVisible(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutSide, true);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutSide, true);\r\n    };\r\n  });\r\n\r\n  return { ref, isComponentVisible, setIsComponentVisible };\r\n}\r\n","import {\r\n  CYRILLIC_LETTERS_ONLY_MESSAGE,\r\n  EXTRA_WORD_OR_SPACE_MESSAGE,\r\n  MIN_NAME_LENGTH,\r\n  MIN_WORD_COUNT_MESSAGE,\r\n  NAME_LENGTH_LIMIT,\r\n  NOT_FULL_NAME_MESSAGE,\r\n} from './constants';\r\n\r\nexport default function nameValidation(name, setErrors) {\r\n  // Удаляем пробелы из строки\r\n  const nameArr = name.split(' ').filter((el) => el);\r\n\r\n  // Шаблон: только кириллица с пробелами\r\n  const namePattern = /^[А-ЯЁа-яё\\s]+$/;\r\n\r\n  // Проверяем, что длина каждого слова более 1 символа\r\n  const isNameLengthValid = nameArr.every((el) => (el.length > MIN_NAME_LENGTH ? true : false));\r\n\r\n  if (!isNameLengthValid) {\r\n    setErrors({\r\n      error: MIN_WORD_COUNT_MESSAGE,\r\n      isValid: false,\r\n    });\r\n  } else if (!namePattern.test(name) && name.length !== 0) {\r\n    setErrors({ error: CYRILLIC_LETTERS_ONLY_MESSAGE, isValid: false });\r\n  } else if (nameArr.length > NAME_LENGTH_LIMIT) {\r\n    setErrors({ error: EXTRA_WORD_OR_SPACE_MESSAGE, isValid: false });\r\n  } else if (nameArr.length < NAME_LENGTH_LIMIT) {\r\n    setErrors({ error: NOT_FULL_NAME_MESSAGE, isValid: false });\r\n  } else if (nameArr.length === NAME_LENGTH_LIMIT) {\r\n    setErrors({ error: '', isValid: true });\r\n  }\r\n}\r\n","import {\r\n  SELECTED_DATE_IS_FUTURE_MESSAGE,\r\n  SELECTED_DATE_IS_PAST_MESSAGE,\r\n  SELECT_CORRECT_DATE_MESSAGE,\r\n} from './constants';\r\nimport { maxDate, minDate } from './dates';\r\n\r\nexport function dateValidation(date, setErrors) {\r\n  // Переводим строку с датой в миллисекунды\r\n  const selectedDate = Date.parse(date);\r\n  const minAllowedDate = Date.parse(minDate);\r\n  const maxAllowedDate = Date.parse(maxDate);\r\n\r\n  if (date.length !== 10) {\r\n    setErrors({ error: SELECT_CORRECT_DATE_MESSAGE, isValid: false });\r\n  } else if (selectedDate < minAllowedDate) {\r\n    setErrors({ error: SELECTED_DATE_IS_PAST_MESSAGE, isValid: false });\r\n  } else if (selectedDate > maxAllowedDate) {\r\n    setErrors({ error: SELECTED_DATE_IS_FUTURE_MESSAGE, isValid: false });\r\n  } else {\r\n    setErrors({ error: '', isValid: true });\r\n  }\r\n}\r\n","import styles from './styles.module.css';\r\n\r\nfunction RecordResult({ data }) {\r\n  const { address, acronym, date } = data;\r\n  return (\r\n    <>\r\n      {data.acronym && (\r\n        <div className={styles.wrapper}>\r\n          <h1 className={styles.title}>Номер записи</h1>\r\n          <span className={styles.text}>{`\r\n          ${address.data.country}/${address.data.region_iso_code}/${acronym}/GLAT${address.data.geo_lat}-GLON${address.data.geo_lon}/${date}`}</span>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecordResult;\r\n","import { useState } from 'react';\r\nimport Form from '../Form/Form';\r\nimport RecordResult from '../RecordResult/RecordResult';\r\nimport styles from './styles.module.css';\r\n\r\nfunction Main() {\r\n  const [recordData, setRecordData] = useState({});\r\n\r\n  function record(data) {\r\n    setRecordData(data);\r\n  }\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <Form record={record} />\r\n      <RecordResult data={recordData} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import '../../vendor/normalize.css';\r\nimport Footer from '../Footer/Footer';\r\nimport Header from '../Header/Header';\r\nimport Main from '../Main/Main';\r\nimport styles from './styles.module.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={styles.page}>\r\n            <Header />\r\n            <Main />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}